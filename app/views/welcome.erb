<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>NYC Food Banks</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bulma@0.9.0/css/bulma.min.css">
    <link rel="stylesheet" href="/stylesheets/helpers.css" />
    <script src="https://kit.fontawesome.com/f8027915fa.js" crossorigin="anonymous"></script>
    <style>
        /* background */		
        .hero {
            background: white url(images/bg_desktop.jpg) center / cover;
        }
        
        @media (max-width: 1024px) { .hero { background: white url(images/bg_tablet.jpg) center / cover; } }
        @media (max-width:  768px) { .hero { background: white url(images/bg_mobile.jpg) center / cover; } }
        
        /* responsive */
        @media (max-width: 768px) {
            :root {
                font-size: 90%;
            }
        }

        /* Always set the map height explicitly to define the size of the div element that contains the map. */
       #map {
         height: 100%;
       }    
    </style>      
  </head>
  <body>
    <section class="hero is-fullheight">
      
        <!-- .hero-body -->
        <div class="hero-body">
            <div class="container">
                <div class="columns is-centered">
                  <div class ="column is-5-tablet is-6-desktop is-7-widescreen">
                        <div class="box">
                            <p class="subtitle">
                                We search 500+ NYC food banks in all five boroughs to find the nearest one open for <strong>you</strong>.
                            </p>
                            <form class="" action="/" method="post">
                                <div class="field">
                                    <label for ="" class="label">Address</label>
                                    <div class="control has-icons-left">
                                        <input type="text" name="address_input" id="autocomplete" placeholder="Enter your address" onFocus="geolocate()" class="input" required>
                                        <span class="icon is-small is-left">
                                            <i class="fa fa-location-arrow"></i>
                                        </span>
                                        <input type="hidden" class="field" name="street_number" id="street_number" disabled="true"/>
                                        <input type="hidden" class="field" name="route" id="route" disabled="true"/>
                                        <input type="hidden" class="field" name="locality" id="locality" disabled="true"/>
                                        <input type="hidden" class="field" name="administrative_area_level_1" id="administrative_area_level_1" disabled="true"/>
                                        <input type="hidden" class="field" name="postal_code" id="postal_code" disabled="true"/>
                                        <input type="hidden" class="field" name="country" id="country" disabled="true"/>                                        
                                    </div>
                                </div>

                                <div class="field">
                                    <label for ="" class="label">Day</label>
                                    <div class="control has-icons-left">
                                        <input type="date" name="date" id="date" value="<%=DateTime.now.in_time_zone('US/Eastern').month%>/<%=DateTime.now.in_time_zone('US/Eastern').day%>/<%=DateTime.now.in_time_zone('US/Eastern').year%>" class="input" required>
                                        <span class="icon is-small is-left">
                                            <i class="fa fa-calendar-alt"></i>
                                        </span>
                                    </div>
                                </div>

                                <div class="field">
                                    <label for ="" class="label">Time</label>
                                    <div class="control has-icons-left">
                                        <input type="time" name="time" id="time" value="<%=DateTime.now.in_time_zone('US/Eastern').strftime("%I:%M%p")%>" class="input" required>
                                        <span class="icon is-small is-left">
                                            <i class="fa fa-clock"></i>
                                        </span>
                                    </div>
                                </div>
                                
                                <br>

                                <div class="field">
                                    <button type="submit" class="button is-primary">
                                        Find food banks
                                    </button>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- /.hero-body -->

        <!-- .hero-footer -->    
        <nav class="hero-footer">
            <div class="columns is-mobile is-marginless heading has-text-weight-bold">
                <div class="column left">
                    <span class="icon is-large is-left"><i class="fas fa-envelope-square"></i></span>
                </div>            
                <div class="column right">
                    <a href="https://invisiblelightnetwork.com/" target="_new"><img src="images/ILN_logo.png"></a>
                </div>
            </div>
        </nav>
        <!-- /.hero-footer -->  
        
    </section>
    <script>
      // This sample uses the Autocomplete widget to help the user select a
      // place, then it retrieves the address components associated with that
      // place, and then it populates the form fields with those details.
      // This sample requires the Places library. Include the libraries=places
      // parameter when you first load the API. For example:
      // <script
      // src="https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=places">

      var placeSearch, autocomplete;

      var componentForm = {
        street_number: 'short_name',
        route: 'long_name',
        locality: 'long_name',
        administrative_area_level_1: 'short_name',
        country: 'long_name',
        postal_code: 'short_name'
      };

      function initAutocomplete() {
        // Create the autocomplete object, restricting the search predictions to
        // geographical location types.
        autocomplete = new google.maps.places.Autocomplete(
            document.getElementById('autocomplete'), {types: ['geocode']});

        // Avoid paying for data that you don't need by restricting the set of
        // place fields that are returned to just the address components.
        autocomplete.setFields(['address_component']);

        // When the user selects an address from the drop-down, populate the
        // address fields in the form.
        autocomplete.addListener('place_changed', fillInAddress);
      }

      function fillInAddress() {
        // Get the place details from the autocomplete object.
        var place = autocomplete.getPlace();

        for (var component in componentForm) {
          document.getElementById(component).value = '';
          document.getElementById(component).disabled = false;
        }

        // Get each component of the address from the place details,
        // and then fill-in the corresponding field on the form.
        for (var i = 0; i < place.address_components.length; i++) {
          var addressType = place.address_components[i].types[0];
          if (componentForm[addressType]) {
            var val = place.address_components[i][componentForm[addressType]];
            document.getElementById(addressType).value = val;
          }
        }
      }

      // Bias the autocomplete object to the user's geographical location,
      // as supplied by the browser's 'navigator.geolocation' object.
      function geolocate() {
        if (navigator.geolocation) {
          navigator.geolocation.getCurrentPosition(function(position) {
            var geolocation = {
              lat: position.coords.latitude,
              lng: position.coords.longitude
            };
            var circle = new google.maps.Circle(
                {center: geolocation, radius: position.coords.accuracy});
            autocomplete.setBounds(circle.getBounds());
          });
        }
      }
    </script>
    <script src="https://maps.googleapis.com/maps/api/js?key=<%=@api_key%>&libraries=places&callback=initAutocomplete"
        async defer></script>    
  </body>
</html>